# ---------------------------------------------------------------------------------------------
# Define the base configurations for docker-compose.yaml
# ---------------------------------------------------------------------------------------------
version: '2'

services:

  mysql-base:
    image: mysql:5.7
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=fabric_ca
    command: mysqld --sql_mode=""
    expose:
      - "3306"

  zookeeper-base:
    image: hyperledger/fabric-zookeeper
    restart: always
    expose:
      - '2181'
      - '2888'
      - '3888'

  kafka-base:
    image: hyperledger/fabric-kafka
    restart: always
    environment:
      - KAFKA_LOG_RETENTION_MS=-1
      - KAFKA_MESSAGE_MAX_BYTES=103809024
      - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
    expose:
      - '9092'

  orderer-base:
    image: hyperledger/fabric-orderer
    environment:
      - ORDERER_GENERAL_LOGLEVEL=info
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt, /etc/hyperledger/msp/peerBuyer/tls/ca.crt, /etc/hyperledger/msp/peerFinco/tls/ca.crt,/etc/hyperledger/msp/peerSupplier/tls/ca.crt]
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=${ORDERER_KAFKA_RETRY_SHORTINTERVAL}
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=${ORDERER_KAFKA_RETRY_SHORTTOTAL}
      - ORDERER_KAFKA_RETRY_LONGINTERVAL=${ORDERER_KAFKA_RETRY_LONGINTERVAL}
      - ORDERER_KAFKA_RETRY_LONGTOTAL=${ORDERER_KAFKA_RETRY_LONGTOTAL}
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_LEDGERTYPE=file
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderers
    command: orderer
    volumes:
      - ./channel/:/etc/hyperledger/configtx
      - ./channel/crypto-config/peerOrganizations/buyer.cievus.com/peers/peer0.buyer.cievus.com/:/etc/hyperledger/msp/peerBuyer
      - ./channel/crypto-config/peerOrganizations/finco.cievus.com/peers/peer0.finco.cievus.com/:/etc/hyperledger/msp/peerFinco
      - ./channel/crypto-config/peerOrganizations/supplier.cievus.com/peers/peer0.supplier.cievus.com/:/etc/hyperledger/msp/peerSupplier

  couch-base:
    image: hyperledger/fabric-couchdb
    environment:
      - COUCHDB_USER=${COUCHDB_USERNAME}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
    expose:
      - "5984"

  peer-base:
    image: hyperledger/fabric-peer:x86_64-1.1.1
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_network
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp/
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=${COUCHDB_USERNAME}
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=${COUCHDB_PASSWORD}
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
      - /var/run/:/host/var/run/
